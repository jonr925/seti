<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		actionBarVisible="false" xmlns:skinnablecomponents="com.hg94.seti.skinnablecomponents.*" xmlns:components="components.*">
	<!--<s:layout>
		<s:HorizontalLayout/>
	</s:layout>-->
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<skinnablecomponents:DataVizSkinnableComponent skinClass="components.DataVizSkin"/>
	<s:List id="waterfallList"
			direction="ltr" width="100%" y="41"
			dataProvider="{observationImages}"
			click="onLongTouch(event)"
			itemRenderer="com.hg94.seti.views.components.WaterfallTileRenderer">
		<s:layout>
			<s:HorizontalLayout gap="0"/>
		</s:layout>
	</s:List>
	<fx:Script>
		<![CDATA[
			import com.hg94.common.facebook.FacebookAirAndroid;
			import com.hg94.seti.model.Observation;
			import com.hg94.seti.model.Target;
			import com.hg94.seti.model.WaterfallTile;
			
			import mx.collections.ArrayCollection;
			
			[Bindable] 
			protected var observationDescription:String;
			
			[Bindable]
			protected var observationImages:ArrayCollection;
			
			[Bindable]
			internal var target:Target;
			
			[Bindable]
			internal var observation:Observation;
			
			private function onSkyButtonInteraction(event:Event):void
			{
				navigator.popView();
			}
			
			override public function set data(value:Object):void
			{
				if (value is Target)
				{
					target = value as Target;
					observation = target.defaultObservation;
					observationImages = observation.waterfallTiles;
					observationDescription = target.friendlyName + ' ' + target.defaultObservation.date.toString();
				}
				super.data = value;
			}
			
			/**
			 * TODO: Listen for press-and-hold or long touch on the list.
			 * When a user presses-and-holds (long-touches) an image open it in
			 * its own view.
			 */
			private function onLongTouch(event:Event):void
			{
				var selectedWaterfallTile:WaterfallTile = waterfallList.selectedItem as WaterfallTile;
				
				if (!selectedWaterfallTile) return;
				
				var imageUrlToUse:String = selectedWaterfallTile.imageURL;
				var messageString:String = "found something interesting in this image using the Personal SETI App";
				
				// TODO: Make this less spammy
//				FacebookAirAndroid.api("me/feed", function(arg0:Object, arg1:Object):void{}, {message:messageString, picture:imageUrlToUse, link:imageUrlToUse}, 'POST'); 
//				navigator.pushView(com.hg94.seti.views.WaterfallImageView, event.target.data);
			}
			
		]]>
	</fx:Script>
</s:View>
